C:30:"PHPUnit\Runner\TestResultCache":2715:{a:2:{s:7:"defects";a:4:{s:47:"testShouldRemoveEntityButEntityIsntInRepository";i:5;s:42:"testShouldObtainAnEntityNotFoundWithinFind";i:4;s:40:"testWhenDeleteTuppleWithIdButIdIsntValid";i:3;s:44:"testShouldObtainEntityWhenUserIsNotRegistred";i:4;}s:5:"times";a:46:{s:48:"testWhenPostIsValidObtainPostInformationsInArray";d:0.414;s:53:"testWhenPostIsNotPublishedThenHaveAnUnhautorizedError";d:0.123;s:51:"testWhenSlugIsntValidOrDefinedThenHaveErrorNotFound";d:0.039;s:47:"testShouldRemoveEntityButEntityIsntInRepository";d:0.002;s:50:"testShouldObtainValidUserEntityWithFindOneByMethod";d:0.001;s:43:"testWhenAddEntityButEntityIsntAValidInsance";d:0.001;s:19:"testShouldAddEntity";d:0.001;s:45:"testShouldObtainAValidUserEntityWithUserExist";d:0.001;s:42:"testShouldObtainAnEntityNotFoundWithinFind";d:0.001;s:56:"testShouldObtainValidEntitiesWhenSearchWithTwoParameters";d:0;s:54:"testShouldObtainAValidEntityWhenSearchWithOneParameter";d:0;s:41:"testShouldSearchEntityButSearchIsAFailure";d:0.001;s:46:"testShouldObtainErrorWhenEntityIsntValidEntity";d:0.001;s:51:"testObtainExceptionWhenGetUndefinedMethodRepository";d:0.027;s:39:"testObtainExceptionWhenGetBadRepository";d:0.023;s:29:"testObtainADoctrineRepository";d:0.039;s:29:"testObtainAInMemoryRepository";d:0.023;s:28:"testShouldObtainValidRequest";d:0;s:21:"testWhenEntityIsValid";d:0.001;s:40:"testShouldObtainErrorWhenEntityIsntExist";d:0;s:31:"testShouldObtainAValidClassName";d:0;s:24:"testObtainTheContentFile";d:0.001;s:20:"testTheFileIsntFound";d:0;s:41:"testShouldObtainAnErrorWhenEntityNotFound";d:0;s:46:"testShouldObtainAValidUserEntityWithParameters";d:0;s:40:"testWhenDeleteTuppleWithIdButIdIsntValid";d:0.002;s:36:"testWhenAddTuppleWithAutoIncrementId";d:0;s:57:"testWhenAddTuppleWithAutoIncrementIdButAnErrorHasOccurred";d:0;s:17:"testWhenAddTupple";d:0;s:43:"testShouldFileIsCorrectlyOpenedAndValidJson";d:0;s:47:"testShouldFileISCorrectlyOpenedButIsInvalidJson";d:0.001;s:41:"testShouldFileIsCorrectlyOpenedButIsEmpty";d:0.001;s:54:"testWhenAValidObjectThenObtainArrayWithParametersValue";d:0;s:30:"testWhenObjectIsNotValidObject";d:0;s:28:"testShouldObtainAValidSetter";d:0;s:56:"testShouldObtainErrorWhenObtainASetterButObjectIsInvalid";d:0;s:33:"testWhenAllParametersIsValidArray";d:0;s:30:"testWhenObtainTrueWhenKeyExist";d:0;s:35:"testWhenObtainFalseWhenKeyIsntExist";d:0.001;s:24:"testWhenObtainValidValue";d:0;s:41:"testWhenObtainNullIfKeyIsntValidParameter";d:0;s:27:"testPostIsValidAndPublished";d:0.054;s:32:"testPostIsExistButIsNotPublished";d:0.061;s:37:"testPostIsNotExistObtainErrorNotFound";d:0.046;s:44:"testShouldObtainEntityWhenUserIsNotRegistred";d:0.023;s:47:"testShouldObtainExceptionWhenUserIsAlreadyExist";d:0.021;}}}